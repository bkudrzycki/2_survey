}
}
for (k in 1:752){
for (i in 20:29) { ## possible age of youth
if (df$baseline_age[k] == i) {
for (j in 1:7) { ## 7 years of recall
x <- paste0("act", 20-j) ## activity by year (stored in previous loop)
y <- paste0("occ", i-j) ## age that year
df[[y]][[k]] <- df[[x]][[k]]
}
}
}
}
df <- df %>% select(-baseline_age)
ys_panel <- left_join(ys_panel, df, by = "IDYouth")
ys_baseline <- ys_panel %>% filter(wave == 0)
ys_baseline <- ys_baseline %>%
mutate(across(contains('act1'), ~ case_when(. == 1 | . == 2 | . == 3 ~ "In School",
. == 0 | . == 8 | . == 99 ~ "NEET",
. == 7 ~ "Self-Employed",
. == 4 | . == 5 ~ "Apprentice",
. == 6 ~ "Employed")),
age13 = baseline_age - 6,
age14 = baseline_age - 5,
age15 = baseline_age - 4,
age16 = baseline_age - 3,
age17 = baseline_age - 2,
age18 = baseline_age - 1,
age19.1 = baseline_age)
df <- ys_panel %>%
dplyr::select(IDYouth, wave, status, age) %>%
pivot_wider(names_from = wave,
values_from = c(status, age)) %>%
mutate(act19.2 = status_0,
age19.2 = age_0,
act19.3 = status_1,
age19.3 = age_1,
act20.1 = status_2,
age20.1 = age_2,
act20.2 = status_3,
age20.2 = age_3,
act21 = status_4,
age21 = age_4) %>%
select(-contains("age_"), -contains("status"))
## AGE AT FIRST EMPLOYMENT; DURATION BETWEEN GRADUATION AND FIRST EMPLOYMENT
ys_baseline <- left_join(ys_baseline, df, by = c("IDYouth"))
df <- ys_baseline %>%
select(IDYouth, contains("age2"), contains("age1"), contains("act1"), contains("act2"))
df <- df[ , order(names(df))]
df$graduation_age <- NA
df$first_employment_age <- NA
df$first_wage_age <- NA
df$first_self_age <- NA
df$right_censored <- 0
df$entry <- NA
actlist <- df %>%
dplyr::select(starts_with("act")) %>%
names()
actlist <- sort(actlist)
agelist <- df %>%
dplyr::select(starts_with("age")) %>%
names()
agelist <- sort(agelist)
# graduation age: only includes observed period (2013 and after)
# first employment age: erased if youth goes back to apprenticeship/schooling
for (k in 1:752){
for (i in 1:11){
x <- actlist[i]
y <- actlist[i+1]
z <- agelist[i]
w <- agelist[i+1]
if (df[[x]][[k]] %in% c("In School", "Apprentice")) {
df[["first_employment_age"]][[k]] <- NA
df[["graduation_age"]][[k]] <- NA
}
if (df[[x]][[k]] %in% c("In School", "Apprentice") && df[[y]][[k]] %in% c("NEET", "Self-Employed", "Employed")) {
df[["graduation_age"]][[k]] <- df[[z]][[k]]
df[["right_censored"]][[k]] <- 1
}
if (df[[y]][[k]] %in% c("Self-Employed", "Employed") && is.na(df[["first_employment_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_employment_age"]][[k]] <- df[[w]][[k]]
df[["right_censored"]][[k]] <- 0
}
if (df[[y]][[k]] %in% c("Self-Employed", "Employed", "NEET") && is.na(df[["entry"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["entry"]][[k]] <- as.character(df[[y]][[k]])
}
if (df[[x]][[k]] %in% "Employed" && is.na(df[["first_wage_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_wage_age"]][[k]] <- df[[z]][[k]]
}
if (df[[x]][[k]] %in% "Self-Employed" && is.na(df[["first_self_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_self_age"]][[k]] <- df[[z]][[k]]
}
if (!is.na(df[["graduation_age"]][[k]]) && df[[y]][[k]] %in% c("Self-Employed", "Employed")) {
df[["right_censored"]][[k]] <- 0
}
}
}
df$first_employment_duration <- df$first_employment_age - df$graduation_age
ys_panel <- left_join(ys_panel, (df %>% select(IDYouth, first_employment_duration, first_employment_age, graduation_age, right_censored, entry, act19.2, act19.3, contains(c("act2", "age1", "age2")))), by = "IDYouth")
View(df)
df <- df %>% select(contains("act"), graduation_age, first_employment_age, first_employment_duration, entry, right_censored)
source("/Users/Shared/Bart/Youth Employment/1_survey/code/prep/survey_cleaning.R", echo=TRUE)
.06*12
df <- ys_panel %>%
filter(wave == 0) %>%
mutate(id = row_number(),
weights = 1/prob,
right_censored = 1-right_censored) %>%  #by convention, 0 = alive (i.e. censored) and 1 = dead (not censored)
select(id, sex, baseline_age, starts_with("occ"), graduation_age, first_employment_age, first_employment_duration, right_censored, prob) %>%
mutate(sex = recode(sex, `1` = "Male", `0` = "Female"))
df <- df %>% mutate(weights = 1/prob)
surv_object <- Surv(time = df$first_employment_duration, event = df$right_censored)
fit1 <- survfit(surv_object ~ sex, data = df)
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$transition_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$first_employment_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
fit1 <- survfit(surv_object, data = df)
fit1 <- survfit(surv_object ~ 1, data = df)
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
print(fit2, print.rmean=T)
df <- ys_panel %>%
filter(wave == 0) %>%
mutate(id = row_number(),
weights = 1/prob,
right_censored = 1-right_censored) %>%  #by convention, 0 = alive (i.e. censored) and 1 = dead (not censored)
select(id, sex, baseline_age, starts_with("occ"), graduation_age, entry, first_employment_age, first_employment_duration, right_censored, prob) %>%
mutate(sex = recode(sex, `1` = "Male", `0` = "Female"))
df <- df %>% mutate(weights = 1/prob) %>% filter(!is.na(entry))
surv_object <- Surv(time = df$first_employment_duration, event = df$right_censored)
fit1 <- survfit(surv_object ~ sex, data = df)
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$first_employment_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
fit1 <- survfit(surv_object ~ 0, data = df)
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$first_employment_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
df$right_censored
View(df)
source("/Users/Shared/Bart/Youth Employment/1_survey/code/prep/survey_cleaning.R", echo=TRUE)
####################
## Data Cleaning  ##
####################
# Package names
packages <- c("haven", "tidyverse", "labelled")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], silent = TRUE)
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
rm(packages, installed_packages)
## Data
ys_panel <- read_sav("data/youth_survey_reshaped.sav", user_na = TRUE)
# filter by age and code status
ys_panel <- ys_panel %>% filter(baseline_age >=20 & baseline_age <= 29,
!is.na(YS1_1))
ys_panel <- ys_panel %>%
mutate(status = ifelse(YS4_1 == 1 | (YS1_2 == 1 & wave == 0), 5,
ifelse(YS8_4 %in% c(1,2,3,5,6,8), 4,
ifelse(YS8_4 == 4, 3, NA)))) %>%
mutate(status = ifelse(is.na(status) & YS7_1 == 1, 1, status)) %>%
mutate(status = ifelse(is.na(status) & F3U2_0a == 1 & YS8_4 %in% c(1,2,3,5,6,8), 4, status)) %>%
mutate(status = ifelse(is.na(status) & YE3_5 == 1 & YS8_4 %in% c(1,2,3,5,6,8), 4, status)) %>%
mutate(status = ifelse(is.na(status) & YE3_5 == 1 & YS8_4 == 4, 3, status)) %>%
mutate(status = ifelse(is.na(status), 2, status))
ys_panel$baseline_activity <- factor(ys_panel$baseline_activity, levels = c(1,2,3,4,5), labels = c("In School", "NEET", "Self-Employed", "Employed", "Apprentice"))
# label status and generate lagged status
ys_panel$status <- factor(ys_panel$status, levels = c(1:5), labels=c("In School", "NEET", "Self-Employed", "Employed", "Apprentice"))
df <- ys_panel %>% select(IDYouth, status, wave)
df = expand.grid(
IDYouth = sort(unique(df$IDYouth)),
wave   = seq(from = min(df$wave), to = max(df$wave))
) %>%
left_join(df, by = c("IDYouth", "wave")) %>%
arrange(IDYouth, wave) %>%
group_by(IDYouth) %>%
mutate(lagged_status = lag(status)) %>%
ungroup() %>%
select(-status)
ys_panel <- left_join(ys_panel, df, by = c("IDYouth", "wave"))
# filter out CQP apprentices
ys_panel <- ys_panel %>%
filter(cqp == 0)
# replace missing values with 0s
ys_panel <- ys_panel %>% mutate_at(vars(starts_with("YS3_17")), ~ if_else(is.na(.), '0', '1'))
## generate weights
# replace census activity with baseline activity for single missing observation, region should be COTONOU
ys_panel <- ys_panel %>% mutate(activite = ifelse(IDYouth == "YS5613", "Ecolier, élève, ou étudiant", activite),
region = ifelse(IDYouth == "YS5613", "COTONOU", region),
ZD = ifelse(IDYouth == "YS5613", "8-1-53-12-4", ZD))
# generate multi-stage sampling information
x <- ys_panel %>% filter(wave == 0) %>%
group_by(activite) %>%
mutate(act_id = cur_group_id(), #strata id numbers (equivalent to dnum and snum in api example)
act_nh = n()) %>% #number of observations per activity strata (nh)
group_by(region) %>%
mutate(reg_id = cur_group_id(), #strata id numbers (equivalent to dnum and snum in api example)
reg_nh = n_distinct(ZD)) %>%  #number of ZD per arrondissement
ungroup() %>%
mutate(act_nh = ifelse(activite %in% c("Occupé, salarié occasionnel", "Occupé, salarié permanent"), 97, act_nh)) %>%
mutate(act_Nh = ifelse(activite == "Autre (cherche 1ère travail, ménagère, aide familiale, ou autre inactif)", 554,
ifelse(activite == "Ecolier, élève, ou étudiant", 1067,
ifelse(activite == "Occupé indépendant", 1125,
ifelse(activite %in% c("Occupé, salarié occasionnel", "Occupé, salarié permanent"), 406, NA)))),
reg_Nh = ifelse(region == "ABOMEY-CALAVI", 69,
ifelse(region == "AGBLANGANDAN", 62,
ifelse(region == "COTONOU", 618,
ifelse(region == "GODOMEY", 167, NA)))),
prob = (act_nh/act_Nh)*(reg_nh/reg_Nh)) %>%
select(IDYouth, act_id, act_nh, reg_id, reg_nh, act_Nh, reg_Nh, prob)
ys_panel <- left_join(ys_panel, x, by = "IDYouth")
rm(x)
ys_panel <- ys_panel %>%
mutate(yeduc = case_when(
YS3_16 == 0 ~ "None",
YS3_16 == 1 ~ "<Primary",
YS3_16 == 2 ~ "<Primary",
YS3_16 == 3 ~ "Primary",
YS3_16 == 4 ~ "Collège",
YS3_16 == 5 ~ "Lycée",
YS3_16 == 6 ~ "Collège",
YS3_16 == 7 ~ "Lycée",
YS3_16 == 8 ~ "Tertiary",
YS3_16 == 9 ~ "Tertiary",
YS3_16 == 10 ~ "Other")) %>%
mutate(feduc = case_when(
YS3_10 == 0 ~ "None",
YS3_10 == 1 ~ "<Primary",
YS3_10 == 2 ~ "<Primary",
YS3_10 == 3 ~ "Primary",
YS3_10 == 4 ~ "Collège",
YS3_10 == 5 ~ "Lycée",
YS3_10 == 6 ~ "Collège",
YS3_10 == 7 ~ "Lycée",
YS3_10 == 8 ~ "Tertiary",
YS3_10 == 9 ~ "Tertiary",
YS3_10 == 10 ~ "Other")) %>%
mutate(meduc = case_when(
YS3_12 == 0 ~ "None",
YS3_12 == 1 ~ "<Primary",
YS3_12 == 2 ~ "<Primary",
YS3_12 == 3 ~ "Primary",
YS3_12 == 4 ~ "Collège",
YS3_12 == 5 ~ "Lycée",
YS3_12 == 6 ~ "Collège",
YS3_12 == 7 ~ "Lycée",
YS3_12 == 8 ~ "Tertiary",
YS3_12 == 9 ~ "Tertiary",
YS3_12 == 10 ~ "Other")) %>%
mutate(yos = ifelse(YS3_15 != 99, YS3_15, 0),
secplus = ifelse(YS3_16 > 4 & YS3_16 != 10, 1, 0),
app = YS3_13,
cep = YS3_17_2,
bepc = YS3_17_4,
bac = YS3_17_6,
cap = YS3_17_8,
licence = YS3_17_11,
master = YS3_17_12,
fathapp = YS3_9,
fath_primary = ifelse(YS3_10 > 2, 1, 0),
fsecplus = ifelse(YS3_10 > 4 & YS3_10 != 10, 1, 0),
mothapp = YS3_11,
moth_primary = ifelse(YS3_12 > 2, 1, 0),
msecplus = ifelse(YS3_12 > 4 & YS3_12 != 10, 1, 0),
married = ifelse(YS3_6 == 1, 1, 0),
siblings = as.numeric(YS3_7),
beninese = YS3_1,
fon = ifelse(!is.na(YS3_4_4), 1, 0),
christian = ifelse(!is.na(YS3_5_1) | !is.na(YS3_5_2) | !is.na(YS3_5_3) | !is.na(YS3_5_4), 1, 0),
city = ifelse(YS3_3 == 4, 1, 0)
)
## PAST ACTIVITIES
# for each youth, we calculate the past activities by year (actxx) and age (occxx)
df <- ys_panel %>%
filter(wave %in% c(0, 2)) %>%
pivot_wider(id_cols = c("IDYouth", "baseline_age"),
names_from = wave,
values_from = c("YS6_16_1", "YS6_16_2", "YS6_16_3", "YS6_16_4", "YS6_16_5", "YS6_16_6", "YS6_16_7"))
for (i in 1:7) {
x <- paste0("YS6_16_", i, "_0")
y <- paste0("YS6_16_", i, "_2")
z <- paste0("act", 20-i) # act#: # corresponds to year
df[[z]] <- coalesce(df[[y]], df[[x]])
}
df <- df %>% select(-starts_with("YS6_16_"))
# create empty occupations occupation at each age (possible ages: 13-28)
for (i in 13:28) { ## possible age of youth
new <- rep(NA, nrow(df))
df[ , ncol(df) + 1] <- new
colnames(df)[ncol(df)] <- paste0("occ", i)
}
for (i in 20:28) { ## possible age of youth
for (j in 7:1) { ## 7 years of recall
x<-paste0("occ", i-j+1)
df[[x]] = NA
}
}
for (k in 1:752){
for (i in 20:29) { ## possible age of youth
if (df$baseline_age[k] == i) {
for (j in 1:7) { ## 7 years of recall
x <- paste0("act", 20-j) ## activity by year (stored in previous loop)
y <- paste0("occ", i-j) ## age that year
df[[y]][[k]] <- df[[x]][[k]]
}
}
}
}
df <- df %>% select(-baseline_age)
ys_panel <- left_join(ys_panel, df, by = "IDYouth")
ys_baseline <- ys_panel %>% filter(wave == 0)
ys_baseline <- ys_baseline %>%
mutate(across(contains('act1'), ~ case_when(. == 1 | . == 2 | . == 3 ~ "In School",
. == 0 | . == 8 | . == 99 ~ "NEET",
. == 7 ~ "Self-Employed",
. == 4 | . == 5 ~ "Apprentice",
. == 6 ~ "Employed")),
age13 = baseline_age - 6,
age14 = baseline_age - 5,
age15 = baseline_age - 4,
age16 = baseline_age - 3,
age17 = baseline_age - 2,
age18 = baseline_age - 1,
age19.1 = baseline_age)
df <- ys_panel %>%
dplyr::select(IDYouth, wave, status, age) %>%
pivot_wider(names_from = wave,
values_from = c(status, age)) %>%
mutate(act19.2 = status_0,
age19.2 = age_0,
act19.3 = status_1,
age19.3 = age_1,
act20.1 = status_2,
age20.1 = age_2,
act20.2 = status_3,
age20.2 = age_3,
act21 = status_4,
age21 = age_4) %>%
select(-contains("age_"), -contains("status"))
## AGE AT FIRST EMPLOYMENT; DURATION BETWEEN GRADUATION AND FIRST EMPLOYMENT
ys_baseline <- left_join(ys_baseline, df, by = c("IDYouth"))
df <- ys_baseline %>%
select(IDYouth, contains("age2"), contains("age1"), contains("act1"), contains("act2"))
df <- df[ , order(names(df))]
df$graduation_age <- NA
df$first_employment_age <- NA
df$first_wage_age <- NA
df$first_self_age <- NA
df$right_censored <- 0
df$entry <- NA
actlist <- df %>%
dplyr::select(starts_with("act")) %>%
names()
actlist <- sort(actlist)
agelist <- df %>%
dplyr::select(starts_with("age")) %>%
names()
agelist <- sort(agelist)
# graduation age: only includes observed period (2013 and after)
# first employment age: erased if youth goes back to apprenticeship/schooling
for (k in 1:752){
for (i in 1:11){
x <- actlist[i]
y <- actlist[i+1]
z <- agelist[i]
w <- agelist[i+1]
if (df[[x]][[k]] %in% c("In School", "Apprentice")) { # reset if return to schooling
df[["first_employment_age"]][[k]] <- NA
df[["graduation_age"]][[k]] <- NA
}
if (df[[x]][[k]] %in% c("In School", "Apprentice") && df[[y]][[k]] %in% c("NEET", "Self-Employed", "Employed")) {
df[["graduation_age"]][[k]] <- df[[z]][[k]]
}
if (df[[y]][[k]] %in% c("Self-Employed", "Employed") && is.na(df[["first_employment_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_employment_age"]][[k]] <- df[[w]][[k]]
}
if (df[[y]][[k]] %in% c("Self-Employed", "Employed", "NEET") && is.na(df[["entry"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["entry"]][[k]] <- as.character(df[[y]][[k]])
}
if (df[[x]][[k]] %in% "Employed" && is.na(df[["first_wage_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_wage_age"]][[k]] <- df[[z]][[k]]
}
if (df[[x]][[k]] %in% "Self-Employed" && is.na(df[["first_self_age"]][[k]]) && !(is.na(df[["graduation_age"]][[k]]))) {
df[["first_self_age"]][[k]] <- df[[z]][[k]]
}
if (df[[y]][[k]] %in% c("In School", "Apprentice")) {
df[["right_censored"]][[k]] <- 1
}
if (df[[y]][[k]] %in% c("Self-Employed", "Employed") && !(is.na(df[["graduation_age"]][[k]]))) {
df[["right_censored"]][[k]] <- 0
}
}
}
table(df$right_censored)
source("/Users/Shared/Bart/Youth Employment/1_survey/code/prep/survey_cleaning.R", echo=TRUE)
rm(i,j,k,new,w, x,y,z,df, actlist, agelist, dflist, ys_baseline, surv_object)
df <- ys_panel %>%
filter(wave == 0) %>%
mutate(id = row_number(),
weights = 1/prob,
right_censored = 1-right_censored) %>%  #by convention, 0 = alive (i.e. censored) and 1 = dead (not censored)
select(id, sex, baseline_age, starts_with("occ"), graduation_age, entry, first_employment_age, first_employment_duration, right_censored, prob) %>%
mutate(sex = recode(sex, `1` = "Male", `0` = "Female"))
df <- df %>% mutate(weights = 1/prob) %>% filter(!is.na(entry))
surv_object <- Surv(time = df$first_employment_duration, event = df$right_censored)
fit1 <- survfit(surv_object ~ sex, data = df)
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$first_employment_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
print(fit2, print.rmean=T)
ggsurvplot(fit1, data = df, pval = FALSE, risk.table ="percentage", palette = "aaas", fontsize = 4, conf.int = TRUE, risk.table.height = .3, risk.table.title = "Percentage at risk", ggtheme = theme_survminer(base_size = 10, base_family = "Palatino"), tables.theme = theme_survminer(base_size = 10, base_family = "Palatino", font.main = 14), legend.labs=c("Female" ,"Male")) + guides(colour = "none", fill = "none") + labs(x = "Duration in Years")
fit1 <- survfit(surv_object ~ 0, data = df)
#fit2 <- survfit(surv_object ~ sex, data = df, weights = weights)
mean(ys_panel$first_employment_duration, na.rm = T) # raw mean = 1.48
print(fit1, print.rmean=T) # unweighted restricted mean from survival analysis = 1.92
ggsurvplot(fit1, data = df, pval = FALSE, risk.table ="percentage", palette = "aaas", fontsize = 4, conf.int = TRUE, risk.table.height = .3, risk.table.title = "Percentage at risk", ggtheme = theme_survminer(base_size = 10, base_family = "Palatino"), tables.theme = theme_survminer(base_size = 10, base_family = "Palatino", font.main = 14), legend.labs=c("Female" ,"Male")) + guides(colour = "none", fill = "none") + labs(x = "Duration in Years")
.07*12
.16*12
table(df$first_employment_duration)
df <- ys_panel %>% filter(wave == 0)
m1 <- lm(first_employment_age ~ entry yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus, data = df)
m1 <- lm(first_employment_age ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus, data = df)
summary(m1)
ys_panel$entry
factor(ys_panel$entry)
df <- ys_panel %>% filter(wave == 0)
df$entry = relevel(df$entry, ref=2)
m1 <- lm(first_employment_age ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus, data = df)
df$entry = relevel(factor(df$entry), ref=2)
m1 <- lm(first_employment_age ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus, data = df)
m1
m2 <- lm(first_employment_age ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus + married + beninese + fon + christian + city, data = df)
ys_panel$first_employment_duration <- ys_panel$first_employment_duration+1
m3 <- lm(first_employment_duration ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus, data = df)
m4 <- lm(first_employment_duration ~ entry + yos + app + cep + bepc + bac + cap + licence + master + fathapp + fath_primary + fsecplus + mothapp + moth_primary + msecplus + married + beninese + fon + christian + city, data = df)
stargazer(m1, m2, m3, m4, df = FALSE, font.size= "scriptsize", column.sep.width = "6pt",
no.space = TRUE, single.row = TRUE, digits = 2, header = F, table.placement = "H",
notes.align = "r",
notes.append = TRUE,
covariate.labels = c("Entry: NEET (reference) \\\\ Entry: Employed",
"Entry: Self-Employed",
"Years of Schooling",
"Completed apprenticeship (=1)",
"Primary school diploma: CEP (=1)",
"Junior high diploma: BEPC (=1)",
"Baccalauréat: BAC (=1)",
"Lower vocational certificate: CAP (=1)",
"2nd cycle university: Licence (=1)",
"3rd cycle university: Maîtrise (=1)",
"Father was apprentice (=1)",
"Father completed primary (=1)",
"Father completed secondary (=1)",
"Mother was apprentice (=1)",
"Mother completed primary (=1)",
"Mother completed secondary (=1)",
"Married (=1)",
"Beninese (=1)",
"Ethnicity: Fon (=1)",
"Religion: Christian (=1)",
"Grew up in a city (=1)"),
title = "Transition into first employment",
omit.stat=c("aic", "bic", "adj.rsq", "ser"),
dep.var.labels = c("Age", "Duration"),
model.names = FALSE,
dep.var.caption = "",
label = "tab:tbl-firstempreg")
summary(m1, m2, m3, m4)
texreg(m1, m2, m3, m4)
texreg(list(m1, m2, m3, m4))
summary(m1)
stargazer(m1, m2, m3, m4, df = FALSE, font.size= "scriptsize", column.sep.width = "6pt",
no.space = TRUE, single.row = TRUE, digits = 2, header = F, table.placement = "H",
notes.align = "r",
notes.append = TRUE,
covariate.labels = c("Entry: NEET (reference) \\\\ Entry: Employed",
"Entry: Self-Employed",
"Years of Schooling",
"Completed apprenticeship (=1)",
"Primary school diploma: CEP (=1)",
"Junior high diploma: BEPC (=1)",
"Baccalauréat: BAC (=1)",
"Lower vocational certificate: CAP (=1)",
"2nd cycle university: Licence (=1)",
"3rd cycle university: Maîtrise (=1)",
"Father was apprentice (=1)",
"Father completed primary (=1)",
"Father completed secondary (=1)",
"Mother was apprentice (=1)",
"Mother completed primary (=1)",
"Mother completed secondary (=1)",
"Married (=1)",
"Beninese (=1)",
"Ethnicity: Fon (=1)",
"Religion: Christian (=1)",
"Grew up in a city (=1)"),
title = "Transition into first employment",
omit.stat=c("aic", "bic", "adj.rsq", "ser"),
dep.var.labels = c("Age", "Duration"),
model.names = FALSE,
dep.var.caption = "",
label = "tab:tbl-firstempreg", type = "html")
.88"12"
.33*12
.88*12
.82*12
.72*12
.86*12
